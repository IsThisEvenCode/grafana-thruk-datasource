{"version":3,"sources":["../src/datasource.js"],"names":["_","TableModel","ThrukDatasource","instanceSettings","$q","backendSrv","templateSrv","q","url","withCredentials","basicAuth","requestOptions","_requestOptions","method","datasourceRequest","then","response","status","message","title","options","query","parseQuery","annotation","path","table","replace","columns","Error","params","where","Math","floor","range","from","toDate","getTime","to","map","result","data","d","i","catch","handleQueryError","bind","encodeURIComponent","text","Object","values","join","value","This","x","targets","length","target","hasColumns","when","shift","forEach","_addColumn","col","condition","limit","keys","row","type","push","rows","match","addColumn","headers","Authorization","tmp","err","console","log","code","error","description"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport TableModel from 'app/core/table_model';\n\nexport class ThrukDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.url = instanceSettings.url;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.basicAuth = instanceSettings.basicAuth;\n  }\n\n  testDatasource() {\n    var requestOptions = this._requestOptions({\n      url: this.url + '/r/v1/',\n      method: 'GET'\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n        }\n      });\n  }\n\n  annotationQuery(options) {\n    var query = this.parseQuery(options.annotation.query);\n    var path = query.table.replace(/^\\//, '');\n    if(query.columns[0] != \"time\") {\n      throw new Error(\"query syntax error, first column must be 'time' for annotations.\");\n    }\n    var params = {\n      columns: query.columns\n    };\n    if(query.where) {\n      query.where += \" AND \";\n    }\n    query.where += \" time > \"+Math.floor(options.range.from.toDate().getTime()/1000);\n    query.where += \" AND time < \"+Math.floor(options.range.to.toDate().getTime()/1000);\n    params.q = query.where;\n\n    var requestOptions = this._requestOptions({\n      url: this.url + '/r/v1/'+path,\n      method: 'GET',\n      params: params,\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(result => {\n        return _.map(result.data, (d, i) => {\n          return {\n            \"annotation\": options.annotation,\n            \"title\": d['type'],\n            \"time\": d['time']*1000,\n            \"text\": d['message'].replace(/^\\[\\d+\\]\\s+/, '').replace(/^[^:]+:\\s+/, ''),\n            \"tags\": d['type'],\n          };\n        });\n      })\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  metricFindQuery(options) {\n    var query = this.parseQuery(options);\n    var path = query.table+\"?columns=\"+query.columns;\n    if(query.where) {\n      path += '&q='+encodeURIComponent(query.where)\n    }\n    var requestOptions = this._requestOptions({\n      url: this.url + '/r/v1/'+path,\n      method: 'GET',\n    });\n    return this.backendSrv.datasourceRequest(requestOptions)\n      .then(result => {\n        return _.map(result.data, (d, i) => {\n          return { text: Object.values(d).join(';'), value: Object.values(d).join(';') };\n        });\n      })\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  query(options) {\n    var This = this;\n    // we can only handle a single query right now\n    for(var x=0; x<options.targets.length; x++) {\n      var table = new TableModel();\n      var target = options.targets[x];\n      var path = target.table\n      var hasColumns = false;\n      var params = {};\n\n      if(!path) {\n        return(This.$q.when([]));\n      }\n      path = path.replace(/^\\//, '');\n\n      if(!target.columns) { target.columns = []; }\n      if(target.columns[0] == '*') {\n        target.columns.shift();\n      }\n      if(target.columns.length > 0) {\n        params.columns = target.columns.join(',');\n        target.columns.forEach(col => {\n          This._addColumn(table, col);\n        });\n        hasColumns = true;\n      }\n      if(target.condition) {\n        params.q = this.templateSrv.replace(target.condition, null, 'glob')\n      }\n      if(target.limit) {\n        params.limit = target.limit;\n      }\n      var requestOptions = This._requestOptions({\n        url: This.url + '/r/v1/'+path,\n        method: 'GET',\n        params: params,\n      });\n      return This.backendSrv.datasourceRequest(requestOptions).then(function(result) {\n        // extract columns from first result row unless specified\n        if(!hasColumns && result.data[0]) {\n          Object.keys(result.data[0]).forEach(col => {\n            This._addColumn(table, col);\n          });\n        }\n        // add data rows\n        _.map(result.data, (d, i) => {\n          var row = [];\n          table.columns.forEach(col => {\n            if(col.type == \"time\") {\n              row.push(d[col.text] * 1000);\n            } else {\n              row.push(d[col.text]);\n            }\n          });\n          table.rows.push(row);\n        });\n        return({\n          data: [\n            table\n          ]\n        });\n      })\n      .catch(this.handleQueryError.bind(this));\n    }\n  }\n\n  _addColumn(table, col) {\n    if(col.match(/^(last_|next_|time)/)) {\n      table.addColumn({ text: col, type: 'time' });\n    } else {\n      table.addColumn({ text: col });\n    }\n  }\n\n  _requestOptions(options) {\n    options = options || {};\n    options.headers = options.headers || {};\n    if(this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if(this.basicAuth) {\n      options.headers.Authorization = this.basicAuth;\n    }\n    options.headers['Content-Type'] = 'application/json';\n    return(options);\n  }\n\n  parseQuery(query) {\n    query = this.templateSrv.replace(query, null, 'glob')\n    var tmp = query.match(/^\\s*SELECT\\s+([\\w_,\\ ]+)\\s+FROM\\s+([\\w_\\/]+)(|\\s+WHERE\\s+(.*))(|\\s+LIMIT\\s+(\\d+))$/i);\n    if(!tmp) {\n      throw new Error(\"query syntax error, expecting: SELECT <column>[,<columns>] FROM <rest url> [WHERE <filter conditions>] [LIMIT <limi>]\");\n    }\n    return({\n      columns: tmp[1].replace(/\\s+/g, ''),\n      table:   tmp[2],\n      where:   tmp[4],\n      limit:   tmp[6],\n    });\n  }\n\n  handleQueryError(err) {\n    console.log(err);\n    if(err.data.code && err.data.code > 400) {\n      var error = \"query error: \"+err.data.message;\n      if(err.data.description) {\n        error += \" - \"+err.data.description;\n      }\n      throw new Error(error);\n    }\n    return [];\n  }\n}\n"]}