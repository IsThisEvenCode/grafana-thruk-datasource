{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ThrukDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","table","columns","condition","requestOptions","datasource","_requestOptions","url","method","headers","backendSrv","datasourceRequest","then","_","map","result","data","d","i","text","value","transformToSegments","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;0CAGKC,wB;;;AAEX,0CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,0JACtCF,MADsC,EAC9BC,SAD8B;;AAG5C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKE,YAAL,GAAwBA,YAAxB;AACA,gBAAKE,MAAL,CAAYC,KAAZ,GAAwB,MAAKD,MAAL,CAAYC,KAAZ,IAAyB,GAAjD;AACA,gBAAKD,MAAL,CAAYE,OAAZ,GAAwB,MAAKF,MAAL,CAAYE,OAAZ,IAAyB,GAAjD;AACA,gBAAKF,MAAL,CAAYG,SAAZ,GAAwB,MAAKH,MAAL,CAAYG,SAAZ,IAAyB,EAAjD;AAP4C;AAQ7C;;;;sCAEW;AACV,gBAAIC,iBAAiB,KAAKC,UAAL,CAAgBC,eAAhB,CAAgC;AACnDC,mBAAK,KAAKF,UAAL,CAAgBE,GAAhB,GAAsB,sCADwB;AAEnDC,sBAAQ,KAF2C;AAGnDC,uBAAS,EAAE,gBAAgB,kBAAlB;AAH0C,aAAhC,CAArB;AAKA,mBAAO,KAAKJ,UAAL,CAAgBK,UAAhB,CAA2BC,iBAA3B,CAA6CP,cAA7C,EACJQ,IADI,CACC;AAAA,qBAAUC,EAAEC,GAAF,CAAMC,OAAOC,IAAb,EAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3C,uBAAO,EAAEC,MAAMF,EAAEV,GAAV,EAAea,OAAOH,EAAEV,GAAxB,EAAP;AACD,eAFe,CAAV;AAAA,aADD,EAIJK,IAJI,CAIC,KAAKd,YAAL,CAAkBuB,mBAAlB,CAAsC,KAAtC,CAJD,CAAP;AAKD;;;6CAuBkB;AACjB,iBAAKC,SAAL,CAAeC,OAAf;AACD;;;6CAEkB;AACjB,mBAAO,YAAU,KAAKvB,MAAL,CAAYE,OAAtB,GACC,QADD,GACU,KAAKF,MAAL,CAAYC,KADtB,GAEC,SAFD,GAEW,KAAKD,MAAL,CAAYG,SAF9B;AAID;;;;QAvD2CT,S;;;;AA0D9CC,+BAAyB6B,WAAzB,GAAuC,4BAAvC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class ThrukDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv     = uiSegmentSrv;\n    this.target.table     = this.target.table     || '/';\n    this.target.columns   = this.target.columns   || '*';\n    this.target.condition = this.target.condition || '';\n  }\n\n  getTables() {\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/index?columns=url&protocol=get',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(result => _.map(result.data, (d, i) => {\n        return { text: d.url, value: d.url };\n      }))\n      .then(this.uiSegmentSrv.transformToSegments(false));\n  }\n\n  /*\n  getColumns() {\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/'+this.target.table+'?limit=1',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(function(result) {\n        var data = [];\n        if(result.data[0]) {\n          Object.keys(result.data[0]).forEach(function(key) {\n            data.push({ text: key, value: key });\n          });\n        }\n        return(data);\n      })\n      .then(this.uiSegmentSrv.transformToSegments(false));\n  }\n  */\n\n  onChangeInternal() {\n    this.panelCtrl.refresh();\n  }\n\n  getCollapsedText() {\n    return('SELECT '+this.target.columns\n           +' FROM '+this.target.table\n           +' WHERE '+this.target.condition\n           );\n  }\n}\n\nThrukDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}