{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ThrukDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","table","columns","condition","setColSegments","requestOptions","datasource","_requestOptions","url","method","headers","backendSrv","datasourceRequest","then","_","map","result","data","d","i","text","value","transformToSegments","catch","_handleQueryError","bind","This","newOperator","Object","keys","forEach","key","push","newSegment","col","index","splice","onChangeInternal","colSegments","angular","isArray","split","length","match","newPlusButton","panelCtrl","refresh","query","join","limit","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class ThrukDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv     = uiSegmentSrv;\n    this.target.table     = this.target.table     || '/';\n    this.target.columns   = this.target.columns   || ['*'];\n    this.target.condition = this.target.condition || '';\n\n    this.setColSegments();\n  }\n\n  getTables() {\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/index?columns=url&protocol=get',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(result => _.map(result.data, (d, i) => {\n        return { text: d.url, value: d.url };\n      }))\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.datasource._handleQueryError.bind(this));\n  }\n\n  getColumns() {\n    var This = this;\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/'+this.target.table+'?limit=1',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(function(result) {\n        var data = [\n          This.uiSegmentSrv.newOperator('-- remove --'),\n          This.uiSegmentSrv.newOperator('avg()'),\n          This.uiSegmentSrv.newOperator('min()'),\n          This.uiSegmentSrv.newOperator('max()'),\n          This.uiSegmentSrv.newOperator('sum()'),\n          This.uiSegmentSrv.newOperator('count()'),\n        ];\n        if(result.data[0]) {\n          Object.keys(result.data[0]).forEach(function(key) {\n            data.push(This.uiSegmentSrv.newSegment({ text: key, value: key }));\n          });\n        }\n        return(data);\n      })\n      .catch(this.datasource._handleQueryError.bind(this));\n  }\n\n  tagSegmentUpdated(col,index) {\n    this.target.columns[index] = col.value;\n    if(col.value == \"-- remove --\") {\n      this.target.columns.splice(index, 1);\n    }\n    this.setColSegments();\n    this.onChangeInternal();\n    return;\n  }\n\n  setColSegments() {\n    this.colSegments = [];\n    if(!angular.isArray(this.target.columns)) {\n      if(!this.target.columns) {\n        this.target.columns = ['*'];\n      } else {\n        this.target.columns = this.target.columns.split(\"\\s*,\\s*\");\n      }\n    }\n    this.target.columns.forEach(col => {\n      this.colSegments.push(this.uiSegmentSrv.newSegment({ value: col }));\n    });\n    if(this.colSegments.length == 0) {\n      this.colSegments.push(this.uiSegmentSrv.newSegment({ value: '*' }));\n    } else {\n      if(this.colSegments[this.colSegments.length-1].text && this.colSegments[this.colSegments.length-1].text.match(/\\(\\)$/)) {\n        this.colSegments.push(this.uiSegmentSrv.newSegment({ value: ' ' }));\n      }\n    }\n    this.colSegments.push(this.uiSegmentSrv.newPlusButton());\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh();\n  }\n\n  getCollapsedText() {\n    var query = 'SELECT '+this.target.columns.join(',')\n               +' FROM '+this.target.table;\n    if(this.target.condition) {\n      query +=  ' WHERE '+this.target.condition\n    }\n    if(this.target.limit) {\n      query +=  ' LIMIT '+this.target.limit\n    }\n    return(query);\n  }\n}\n\nThrukDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}